<!DOCTYPE html>
<html lang="cs">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>HvH.fun Panel</title>
  <style>
    :root {
      --bg-color: #131313;
      --card-color: #212121;
      --accent-color: #58a6ff;
      --error-color: #f85149;
      --text-color: #ffffff;
      --border-radius: 12px;
      --transition-speed: 0.4s;
      --hover-scale: 1.05;
      --box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.7);
    }

    body {
      margin: 0;
      font-family: 'Roboto', sans-serif;
      background: linear-gradient(135deg, rgba(40, 44, 52, 1) 0%, rgba(0, 0, 0, 1) 100%);
      color: var(--text-color);
      display: flex;
      flex-direction: column;
      align-items: center;
      min-height: 100vh;
      padding: 20px;
      box-sizing: border-box;
    }

    .tabs {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 20px;
      gap: 10px;
      flex-wrap: nowrap;
      overflow-x: auto;
      scrollbar-width: none;
    }

    .tabs::-webkit-scrollbar {
      display: none;
    }

    .tabs button {
      padding: 10px 20px;
      border: none;
      border-radius: var(--border-radius);
      background-color: var(--accent-color);
      color: white;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .tabs button.active {
      background-color: #4096e0;
    }

    .container {
      width: 100%;
      max-width: 480px;
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      background-color: var(--card-color);
      padding: 20px;
      display: none;
    }

    .container.active {
      display: block;
    }

    h2, h3 {
      text-align: center;
      font-weight: 600;
    }

    h2 {
      font-size: 28px;
      margin-bottom: 1rem;
    }

    h3 {
      font-size: 24px;
      margin-bottom: 15px;
    }

    button {
      width: 100%;
      padding: 12px;
      margin-bottom: 15px;
      background-color: var(--accent-color);
      color: var(--text-color);
      border: none;
      border-radius: var(--border-radius);
      font-size: 16px;
      transition: background-color var(--transition-speed), transform var(--transition-speed);
    }

    button:focus, button:hover {
      background-color: #4096e0;
      transform: scale(var(--hover-scale));
    }

    .quote {
      font-size: 18px;
      color: var(--accent-color);
      text-align: center;
      font-style: italic;
      margin-bottom: 1rem;
      word-break: break-word;
    }

    ul {
      list-style: none;
      padding-left: 0;
      color: #ccc;
      font-size: 14px;
    }

    li {
      margin-bottom: 8px;
      word-break: break-word;
    }

    .about-us-section img {
      display: block;
      margin: 0 auto 20px;
      border-radius: 10px;
      max-width: 100%;
      height: auto;
    }

    /* Oznámení v pravém dolním rohu */
    .notification {
      position: fixed;
      bottom: 20px;
      right: 20px;
      background-color: var(--error-color);
      color: white;
      padding: 10px 20px;
      border-radius: 8px;
      font-size: 16px;
      display: none;
      z-index: 100;
      transition: opacity 0.4s ease-in-out;
    }

    .notification.show {
      display: block;
      opacity: 1;
    }

    @media screen and (max-width: 500px) {
      .container {
        width: 90%;
      }

      .tabs {
        flex-direction: column;
        align-items: stretch;
      }
    }
  </style>
</head>
<body>

  <div class="tabs">
    <button class="tab-btn active" onclick="showTab('registerBox')">Registrace</button>
    <button class="tab-btn" onclick="showTab('panelBox')">Panel</button>
    <button class="tab-btn" onclick="showTab('inviteBox')">Invites</button>
    <button class="tab-btn" onclick="showTab('aboutBox')">O nás</button>
  </div>

  <!-- REGISTRACE -->
  <div class="container active" id="registerBox">
    <h2>Registrace</h2>
    <p>Pro přístup do panelu musíte zadat svůj invite kód.</p>
    <input type="text" id="inviteCodeInput" placeholder="Zadejte Invite kód" />
    <button onclick="register()">Registrovat</button>
    <p id="registerError" style="color: var(--error-color); display: none; text-align: center;">Neplatný Invite kód!</p>
  </div>

  <!-- PANEL -->
  <div class="container" id="panelBox">
    <h2>HvH.fun Panel</h2>
    <p class="quote">"Hraj fér, ale hraj chytře."</p>
    <button onclick="downloadLoader('primordial')">Stáhnout Primordial</button>
    <button onclick="downloadLoader('fatality')">Stáhnout Fatality</button>
    <button onclick="downloadLoader('gamesense')">Stáhnout Gamesense</button>
    <button onclick="downloadLoader('evolve')">Stáhnout Evolve</button>
    <button onclick="resetHWID()">Resetovat HWID</button>
  </div>

  <!-- INVITES -->
  <div class="container" id="inviteBox">
    <h2>Invites</h2>
    <button onclick="generateInvite()">Generovat Invite</button>
    <p id="inviteOutput" class="quote"></p>
    <div id="inviteListSection">
      <h3>Již generované invite</h3>
      <ul id="inviteList"></ul>
    </div>
  </div>

  <!-- ABOUT -->
  <div class="container" id="aboutBox">
    <h2>O nás</h2>
    <img src="https://i.imgur.com/G9I2a62.png" alt="HvH.fun Logo" />
    <p>Jsme <strong>HvH.fun</strong>, váš spolehlivý zdroj pro <strong>cheaty do CS:GO</strong>. Naší misí je poskytovat kvalitní a bezpečné nástroje pro hráče, kteří se chtějí zlepšit a vyzkoušet něco nového. Naše stránka nabízí širokou škálu cheatů, které si můžete stáhnout a použít ve své hře, abyste získali výhodu. Bezpečnost a diskrétnost jsou pro nás na prvním místě. Rádi vám poskytujeme nástroje, které vám pomohou vylepšit vaše herní dovednosti.</p>
    <p>Připojte se k nám a objevte nový svět herních cheatů!</p>
  </div>

  <!-- Oznámení -->
  <div class="notification" id="notification">Můžete vytvořit maximálně 2 pozvánky!</div>

  <script>
    const inviteCodes = [];
    const validInvites = [];

    function showTab(tabId) {
      const tabs = document.querySelectorAll('.container');
      const buttons = document.querySelectorAll('.tab-btn');
      tabs.forEach(tab => tab.classList.remove('active'));
      buttons.forEach(btn => btn.classList.remove('active'));
      document.getElementById(tabId).classList.add('active');
      event.target.classList.add('active');
    }

    function generateUID() {
      return Math.floor(Math.random() * 1000000);
    }

    function downloadLoader(type) {
      let url = '';
      switch(type) {
        case 'primordial':
          url = 'https://mega.nz/file/TYh30ZAJ#UqX5P8-KHuB88DwUWgA9YG-MXEF_fP1X-1-YPhLUHYQ';
          break;
        case 'fatality':
          url = 'https://cdn.discordapp.com/attachments/1365051778483097610/1366000158868766812/fatality_t.dll?ex=68207dc8&is=681f2c48&hm=6c1f5be5b3ecdaf5881ba0cd9a7d96ab2c3b6ea795fd0a2f9f2ced29f9659413';
          break;
        case 'gamesense':
          url = 'https://mega.nz/file/nVg0BAAC#lJ0xSj4sT9usWym59NfmyPnDXSsZuSsIZvlJ77u-lj0';
          break;
        case 'evolve':
          url = 'https://cdn.discordapp.com/attachments/1366449626361757797/1366449855429480488/ev0lve-old.rar?ex=6820cf18&is=681f7d98&hm=0e331fb0b1e98e6e4a5661ebd266f75941691ab314b4c8aec1feaf201531a84a';
          break;
      }
      window.open(url, '_blank');
    }

    function resetHWID() {
      alert('HWID resetován!');
    }

    function register() {
      const inviteCode = document.getElementById('inviteCodeInput').value.trim();
      if (validInvites.includes(inviteCode)) {
        document.getElementById('registerBox').classList.remove('active');
        document.getElementById('panelBox').classList.add('active');
      } else {
        document.getElementById('registerError').style.display = 'block';
      }
    }

    function generateInvite() {
      if (inviteCodes.length >= 2) {
        document.getElementById('notification').classList.add('show');
        setTimeout(() => {
          document.getElementById('notification').classList.remove('show');
        }, 3000);
        return;
      }

      const newInvite = generateUID();
      inviteCodes.push(newInvite);
      validInvites.push(newInvite);

      const inviteList = document.getElementById('inviteList');
      const li = document.createElement('li');
      li.textContent = newInvite;
      inviteList.appendChild(li);
      document.getElementById('inviteOutput').textContent = `Vygenerován invite: ${newInvite}`;
    }
  </script>
</body>
</html>
